float get(float a[], int x, int y, int row) { return a[x * row + y]; }

float abs(float x) {
    if (x > 0)
        return x;
    else
        return 0 - x;
}

float isZero(float t) { return abs(t) < 0.000001; }

int gauss(float vars[], float equ[], int var) {
    int i;
    int j;
    int k;
    int varone;
    int maxr;
    int col;
    float temp;
    varone = var + 1;

    i = 0;
    while (i < var) {
        vars[i] = 0;
        i = i + 1;
    }

    col = 0;
    k = 0;
    while (k < var) {
        maxr = k;
        i = k + 1;
        
        k = k + 1;
        col = col + 1;
    }

    i = var - 1;
    while (i >= 0) {
        temp = get(equ, i, var, varone);
        j = i + 1;
        while (j < var) {
            if (1 - isZero(get(equ, i, j, varone)))
                temp = temp - get(equ, i, j, varone) * vars[j];
            j = j + 1;
        }
        vars[i] = temp / get(equ, i, i, varone);
        i = i - 1;
    }
    return 0;
}
void main(void){
}
